import{_ as t,c as s,o as a,a3 as e}from"./chunks/framework.1zJnuF3-.js";const b=JSON.parse('{"title":"Test","description":"","frontmatter":{"outline":[2,3]},"headers":[],"relativePath":"api/class/test.md","filePath":"api/class/test.md"}'),i={name:"api/class/test.md"},o=e('<h1 id="test" tabindex="-1">Test <a class="header-anchor" href="#test" aria-label="Permalink to &quot;Test&quot;">​</a></h1><p><sup><sup>Defined in <a href="#">C:/Users/Olanzo/Documents/Github/mekstuff/docdocs/tests/lib1/src/index.ts:1:13</a></sup></sup></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): Test</span></span></code></pre></div><p><sup>returns <a target="_blank" href="#">Test</a></sup></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="test-1" tabindex="-1">test <a class="header-anchor" href="#test-1" aria-label="Permalink to &quot;test&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Test.test: <a>string</a></p><p>( Defaults to &quot;&quot; )</p></div><p>display <code>this</code> inline along with <code>this part</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>WTF <code>lol</code></p><p><code>lol</code></p><p><sup><sup>Defined in <a href="#">C:/Users/Olanzo/Documents/Github/mekstuff/docdocs/tests/lib1/src/index.ts:12:1</a></sup></sup></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="test2" tabindex="-1">test2 <a class="header-anchor" href="#test2" aria-label="Permalink to &quot;test2&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param0: string, param1: number): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Documentation</th><th>Default</th></tr></thead><tbody><tr><td>param0</td><td><a>string</a></td><td>This part does that part</td><td>-</td></tr><tr><td>param1</td><td><a>number</a></td><td>-</td><td>-</td></tr></tbody></table><blockquote><p><sup>returns <a>undefined</a> | <a>string</a> - [object Object]</sup></p></blockquote><p><sup><sup>Defined in <a href="#">C:/Users/Olanzo/Documents/Github/mekstuff/docdocs/tests/lib1/src/index.ts:18:1</a></sup></sup></p>',20),n=[o];function r(d,h,p,l,c,u){return a(),s("div",null,n)}const m=t(i,[["render",r]]);export{b as __pageData,m as default};
